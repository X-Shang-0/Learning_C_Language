#include <stdio.h>
int main()
{
	int a[100];//存放完整约数
	int i, j, n, m;
	for (j = 2; j < 1000; j++)//遍历2->999
	{
		n = 0;
		m = j;
		for (i = 1; i < j; i++)//遍历约数
		{
			if ((j % i) == 0)//判断能否被约数整除
			{
				m = m - i;//减去所有约数后的值
				a[n] = i;//约数存放处
				n++;//增加数组存储空间
			}
		}
		if (m == 0)
		{
			printf("%d is a wanshu\n", j);
			for (i = 0; i < n-1 ; i++)//遍历约数数组
				printf("%d ", a[i]);//最后一位约数前的数遍历
			printf("%d\n", a[n-1]);//输出最后一位约数并回车
		}
	}
	return 0;
}


变量的作用域和存储类别

#include<stdio.h>
int a = 5; //全局变量 第一次为5 第二次为4 第三次为3
int func(int d)  //func函数
{
	int b = 5;
	static int c = 5;  //静态变量
	a--;
	b--;
	--c;
	--d;
	return a + b + c + d;
}
main()
{
	int k, a = 4;
	for (k = 0; k < 3; k++)
		printf("%d,", func(a--));
}



#include<stdio.h>
int k = 1;
int fun1(int x)
{
	return(k * x);
}
int fun2(int y)
{
	int k = 3;
	return(y / k);
}

main()
{
	k--;  //全局变量k自减
	printf("%d\n", fun1(fun2(6)));  //k=0并调用fun1和2
}
